{
  "version": 3,
  "sources": ["code.ts"],
  "sourcesContent": ["figma.showUI(__html__);\n\n// figma.ui.onmessage = (msg) => {\n//   let { deg, xpos, ypos } = msg;\n//   let node = figma.currentPage.selection[0];\n\n//   node.relativeTransform = [\n//     [Math.cos(+deg), -Math.sin(+deg), +xpos],\n//     [Math.sin(+deg), Math.cos(+deg), +ypos],\n//   ];\n// };\n\nlet nodeAry = [];\nlet handle;\nlet handlePos = [];\nlet updateIntervalId;\n\nfigma.ui.onmessage = (msg) => {\n  init();\n\n  const { count } = msg;\n  if (!count) return;\n\n  // Check if multiple nodes are selected\n  if (figma.currentPage.selection.length > 1) {\n    notify(\"Select one node. Multiple nodes are not supported\");\n    reset();\n    return;\n  }\n  // check if atleast one node is selected\n  if (figma.currentPage.selection.length === 0) {\n    notify(\"Select atleast one node.\");\n    reset();\n    return;\n  }\n\n  let anode = figma.currentPage.selection[0];\n  let aparent = anode.parent;\n\n  createHandle(aparent, anode);\n\n  for (let i = 0; i < count; i++) {\n    nodeAry.push(anode.clone());\n  }\n\n  nodeAry.forEach((e, i) => aparent.insertChild(i, e));\n};\n\nfunction init() {\n  clearNodeAry();\n  removeHandle();\n}\n\nfunction clearNodeAry() {\n  nodeAry.forEach((e) => e.remove());\n  nodeAry = [];\n}\n\nfunction createHandle(parent, node) {\n  let line = figma.createLine();\n  line.resize(0.1, 0);\n  line.strokeWeight = 12;\n  line.strokeCap = \"ROUND\";\n  handle = line;\n  line.y = node.y + 2 * node.height;\n  line.x = node.x + node.width / 2;\n  handlePos = [line.x, line.y];\n  parent.insertChild(0, line);\n\n  updateIntervalId = setInterval(() => {\n    handlePos = [line.x, line.y];\n  }, 300);\n}\n\nfunction removeHandle() {\n  if (handle) {\n    handle.remove();\n    clearInterval(updateIntervalId);\n    handle = null;\n  }\n}\n\nfunction notify(msg) {\n  figma.notify(msg);\n}\n\nfunction reset() {}\n\nfigma.on(\"selectionchange\", () => {\n  console.log(\"selection change event\");\n});\n\n// Removing handles while closing plugins\nfigma.on(\"close\", () => {\n  removeHandle();\n});\n"],
  "mappings": "AAAA,MAAM,OAAO;AAYb,IAAI,UAAU;AACd,IAAI;AACJ,IAAI,YAAY;AAChB,IAAI;AAEJ,MAAM,GAAG,YAAY,CAAC,QAAQ;AAC5B;AAEA,QAAM,EAAE,UAAU;AAClB,MAAI,CAAC;AAAO;AAGZ,MAAI,MAAM,YAAY,UAAU,SAAS,GAAG;AAC1C,WAAO;AACP;AACA;AAAA;AAGF,MAAI,MAAM,YAAY,UAAU,WAAW,GAAG;AAC5C,WAAO;AACP;AACA;AAAA;AAGF,MAAI,QAAQ,MAAM,YAAY,UAAU;AACxC,MAAI,UAAU,MAAM;AAEpB,eAAa,SAAS;AAEtB,WAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAC9B,YAAQ,KAAK,MAAM;AAAA;AAGrB,UAAQ,QAAQ,CAAC,GAAG,MAAM,QAAQ,YAAY,GAAG;AAAA;AAGnD,gBAAgB;AACd;AACA;AAAA;AAGF,wBAAwB;AACtB,UAAQ,QAAQ,CAAC,MAAM,EAAE;AACzB,YAAU;AAAA;AAGZ,sBAAsB,QAAQ,MAAM;AAClC,MAAI,OAAO,MAAM;AACjB,OAAK,OAAO,KAAK;AACjB,OAAK,eAAe;AACpB,OAAK,YAAY;AACjB,WAAS;AACT,OAAK,IAAI,KAAK,IAAI,IAAI,KAAK;AAC3B,OAAK,IAAI,KAAK,IAAI,KAAK,QAAQ;AAC/B,cAAY,CAAC,KAAK,GAAG,KAAK;AAC1B,SAAO,YAAY,GAAG;AAEtB,qBAAmB,YAAY,MAAM;AACnC,gBAAY,CAAC,KAAK,GAAG,KAAK;AAAA,KACzB;AAAA;AAGL,wBAAwB;AACtB,MAAI,QAAQ;AACV,WAAO;AACP,kBAAc;AACd,aAAS;AAAA;AAAA;AAIb,gBAAgB,KAAK;AACnB,QAAM,OAAO;AAAA;AAGf,iBAAiB;AAAA;AAEjB,MAAM,GAAG,mBAAmB,MAAM;AAChC,UAAQ,IAAI;AAAA;AAId,MAAM,GAAG,SAAS,MAAM;AACtB;AAAA;",
  "names": []
}
